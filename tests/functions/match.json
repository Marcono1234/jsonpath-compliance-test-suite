{
  "tests": [
    {
      "name": "found match",
      "selector" : "$[?match(@.a, 'a.*')]",
      "document" : [{"a": "ab"}],
      "result": [
        {"a":"ab"}
      ],
      "tags": ["function", "match"]
    },
    {
      "name": "double quotes",
      "selector" : "$[?match(@.a, \"a.*\")]",
      "document" : [{"a": "ab"}],
      "result": [
        {"a":"ab"}
      ],
      "tags": ["function", "match"]
    },
    {
      "name": "regex from the document",
      "selector" : "$.values[?match(@, $.regex)]",
      "document" : {"regex": "b.?b", "values": ["abc", "bcd", "bab", "bba", "bbab", "b", true, [], {}]},
      "result": ["bab"],
      "tags": ["function", "match"]
    },
    {
      "name": "don't select match",
      "selector" : "$[?!match(@.a, 'a.*')]",
      "document" : [{"a": "ab"}],
      "result": [
      ],
      "tags": ["function", "match"]
    },
    {
      "name": "not a match",
      "selector" : "$[?match(@.a, 'a.*')]",
      "document" : [{"a": "bc"}],
      "result": [],
      "tags": ["function", "match"]
    },
    {
      "name": "select non-match",
      "selector" : "$[?!match(@.a, 'a.*')]",
      "document" : [{"a": "bc"}],
      "result": [{"a": "bc"}],
      "tags": ["function", "match"]
    },
    {
      "name": "non-string first arg",
      "selector" : "$[?match(1, 'a.*')]",
      "document" : [{"a": "bc"}],
      "result": [],
      "tags": ["function", "match"]
    },
    {
      "name": "non-string second arg",
      "selector" : "$[?match(@.a, 1)]",
      "document" : [{"a": "bc"}],
      "result": [],
      "tags": ["function", "match"]
    },
    {
      "name": "filter, match function, unicode char class, uppercase",
      "selector": "$[?match(@, '\\\\p{Lu}')]",
      "document": ["ж", "Ж", "1", "жЖ", true, [], {}],
      "result": ["Ж"],
      "tags": ["function", "match"]
    },
    {
      "name": "filter, match function, unicode char class negated, uppercase",
      "selector": "$[?match(@, '\\\\P{Lu}')]",
      "document": ["ж", "Ж", "1", true, [], {}],
      "result": ["ж", "1"],
      "tags": ["function", "match"]
    },
    {
      "name": "filter, match function, unicode, surrogate pair",
      "selector": "$[?match(@, 'a.b')]",
      "document": ["a\uD800\uDD01b", "ab", "1", true, [], {}],
      "result": ["a\uD800\uDD01b"],
      "tags": ["function", "match"]
    },
    {
      "name": "dot matcher on \\u2028",
      "selector": "$[?match(@, '.')]",
      "document": ["\u2028", "\r", "\n", true, [], {}],
      "result": ["\u2028"],
      "tags": ["function", "match"]
    },
    {
      "name": "dot matcher on \\u2029",
      "selector": "$[?match(@, '.')]",
      "document": ["\u2029", "\r", "\n", true, [], {}],
      "result": ["\u2029"],
      "tags": ["function", "match"]
    },
    {
      "name": "result cannot be compared",
      "selector" : "$[?match(@.a, 'a.*')==true]",
      "invalid_selector": true,
      "tags": ["function", "match"]
    },
    {
      "name": "too few params",
      "selector" : "$[?match(@.a)==1]",
      "invalid_selector": true,
      "tags": ["function", "match"]
    },
    {
      "name": "too many params",
      "selector" : "$[?match(@.a,@.b,@.c)==1]",
      "invalid_selector": true,
      "tags": ["function", "match"]
    },
    {
      "name": "arg is a function expression",
      "selector": "$.values[?match(@.a, value($..['regex']))]",
      "document": {
        "regex": "a.*",
        "values": [
          {
            "a": "ab"
          },
          {
            "a": "ba"
          }
        ]
      },
      "result": [
        {
          "a": "ab"
        }
      ],
      "tags": ["function", "match"]
    },
    {
      "name": "dot in character class",
      "selector" : "$[?match(@, 'a[.b]c')]",
      "document" : ["abc", "a.c", "axc"],
      "result": ["abc", "a.c"],
      "tags": ["function", "match"]
    },
    {
      "name": "escaped dot",
      "selector" : "$[?match(@, 'a\\\\.c')]",
      "document" : ["abc", "a.c", "axc"],
      "result": ["a.c"],
      "tags": ["function", "match"]
    },
    {
      "name": "escaped backslash before dot",
      "selector" : "$[?match(@, 'a\\\\\\\\.c')]",
      "document" : ["abc", "a.c", "axc", "a\\\u2028c"],
      "result": ["a\\\u2028c"],
      "tags": ["function", "match"]
    },
    {
      "name": "escaped left square bracket",
      "selector" : "$[?match(@, 'a\\\\[.c')]",
      "document" : ["abc", "a.c", "a[\u2028c"],
      "result": ["a[\u2028c"],
      "tags": ["function", "match"]
    },
    {
      "name": "escaped right square bracket",
      "selector" : "$[?match(@, 'a[\\\\].]c')]",
      "document" : ["abc", "a.c", "a\u2028c", "a]c"],
      "result": ["a.c", "a]c"],
      "tags": ["function", "match"]
    },
    {
      "name": "explicit caret",
      "selector" : "$[?match(@, '^ab.*')]",
      "document" : ["abc", "axc", "ab", "xab"],
      "result": ["abc", "ab"],
      "tags": ["function", "match"]
    },
    {
      "name": "explicit dollar",
      "selector" : "$[?match(@, '.*bc$')]",
      "document" : ["abc", "axc", "ab", "abcx"],
      "result": ["abc"],
      "tags": ["function", "match"]
    }
  ]
}
